/*
 * generated by Xtext 2.20.0
 */
package uk.ac.kcl.inf.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import uk.ac.kcl.inf.ide.contentassist.antlr.internal.InternalISCLParser;
import uk.ac.kcl.inf.services.ISCLGrammarAccess;

public class ISCLParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(ISCLGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, ISCLGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getViolationTermAccess().getAlternatives(), "rule__ViolationTerm__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getContractTypeAccess().getAlternatives(), "rule__ContractType__Alternatives");
			builder.put(grammarAccess.getCoverageAccess().getAlternatives(), "rule__Coverage__Alternatives");
			builder.put(grammarAccess.getContractAccess().getGroup(), "rule__Contract__Group__0");
			builder.put(grammarAccess.getContractAccess().getGroup_8(), "rule__Contract__Group_8__0");
			builder.put(grammarAccess.getContractAccess().getGroup_11(), "rule__Contract__Group_11__0");
			builder.put(grammarAccess.getContractAccess().getGroup_16(), "rule__Contract__Group_16__0");
			builder.put(grammarAccess.getContractAccess().getGroup_16_2(), "rule__Contract__Group_16_2__0");
			builder.put(grammarAccess.getPaymentTermAccess().getGroup(), "rule__PaymentTerm__Group__0");
			builder.put(grammarAccess.getClaimTermAccess().getGroup(), "rule__ClaimTerm__Group__0");
			builder.put(grammarAccess.getClaimTermAccess().getGroup_3(), "rule__ClaimTerm__Group_3__0");
			builder.put(grammarAccess.getClaimReductionTermAccess().getGroup(), "rule__ClaimReductionTerm__Group__0");
			builder.put(grammarAccess.getPremiumIncreaseTermAccess().getGroup(), "rule__PremiumIncreaseTerm__Group__0");
			builder.put(grammarAccess.getCustomerAccess().getGroup(), "rule__Customer__Group__0");
			builder.put(grammarAccess.getCustomerAccess().getGroup_2(), "rule__Customer__Group_2__0");
			builder.put(grammarAccess.getCustomerAccess().getGroup_3(), "rule__Customer__Group_3__0");
			builder.put(grammarAccess.getCompanyAccess().getGroup(), "rule__Company__Group__0");
			builder.put(grammarAccess.getInsurableObjectAccess().getGroup(), "rule__InsurableObject__Group__0");
			builder.put(grammarAccess.getInsurableObjectAccess().getGroup_2(), "rule__InsurableObject__Group_2__0");
			builder.put(grammarAccess.getREALAccess().getGroup(), "rule__REAL__Group__0");
			builder.put(grammarAccess.getContractAccess().getTypeAssignment_0(), "rule__Contract__TypeAssignment_0");
			builder.put(grammarAccess.getContractAccess().getNameAssignment_2(), "rule__Contract__NameAssignment_2");
			builder.put(grammarAccess.getContractAccess().getCompanyAssignment_5(), "rule__Contract__CompanyAssignment_5");
			builder.put(grammarAccess.getContractAccess().getCustomersAssignment_7(), "rule__Contract__CustomersAssignment_7");
			builder.put(grammarAccess.getContractAccess().getCustomersAssignment_8_1(), "rule__Contract__CustomersAssignment_8_1");
			builder.put(grammarAccess.getContractAccess().getInsurableObjectsAssignment_10(), "rule__Contract__InsurableObjectsAssignment_10");
			builder.put(grammarAccess.getContractAccess().getInsurableObjectsAssignment_11_1(), "rule__Contract__InsurableObjectsAssignment_11_1");
			builder.put(grammarAccess.getContractAccess().getPaymentTermAssignment_14(), "rule__Contract__PaymentTermAssignment_14");
			builder.put(grammarAccess.getContractAccess().getClaimTermAssignment_15(), "rule__Contract__ClaimTermAssignment_15");
			builder.put(grammarAccess.getContractAccess().getViolationTermsAssignment_16_1(), "rule__Contract__ViolationTermsAssignment_16_1");
			builder.put(grammarAccess.getContractAccess().getViolationTermsAssignment_16_2_1(), "rule__Contract__ViolationTermsAssignment_16_2_1");
			builder.put(grammarAccess.getPaymentTermAccess().getPremiumAssignment_1(), "rule__PaymentTerm__PremiumAssignment_1");
			builder.put(grammarAccess.getPaymentTermAccess().getPeriodAssignment_3(), "rule__PaymentTerm__PeriodAssignment_3");
			builder.put(grammarAccess.getPaymentTermAccess().getIncreaseAssignment_5(), "rule__PaymentTerm__IncreaseAssignment_5");
			builder.put(grammarAccess.getClaimTermAccess().getClaimAssignment_1(), "rule__ClaimTerm__ClaimAssignment_1");
			builder.put(grammarAccess.getClaimTermAccess().getClaimerAssignment_3_1(), "rule__ClaimTerm__ClaimerAssignment_3_1");
			builder.put(grammarAccess.getContractCancellationTermAccess().getCancelledAssignment(), "rule__ContractCancellationTerm__CancelledAssignment");
			builder.put(grammarAccess.getClaimReductionTermAccess().getClaimReductionAssignment_1(), "rule__ClaimReductionTerm__ClaimReductionAssignment_1");
			builder.put(grammarAccess.getPremiumIncreaseTermAccess().getPremiumIncreaseAssignment_1(), "rule__PremiumIncreaseTerm__PremiumIncreaseAssignment_1");
			builder.put(grammarAccess.getCustomerAccess().getNameAssignment_1(), "rule__Customer__NameAssignment_1");
			builder.put(grammarAccess.getCustomerAccess().getCoverageAssignment_2_1(), "rule__Customer__CoverageAssignment_2_1");
			builder.put(grammarAccess.getCustomerAccess().getParticipationAssignment_3_1(), "rule__Customer__ParticipationAssignment_3_1");
			builder.put(grammarAccess.getCompanyAccess().getNameAssignment_1(), "rule__Company__NameAssignment_1");
			builder.put(grammarAccess.getInsurableObjectAccess().getNameAssignment_1(), "rule__InsurableObject__NameAssignment_1");
			builder.put(grammarAccess.getInsurableObjectAccess().getOwnerAssignment_2_1(), "rule__InsurableObject__OwnerAssignment_2_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private ISCLGrammarAccess grammarAccess;

	@Override
	protected InternalISCLParser createParser() {
		InternalISCLParser result = new InternalISCLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ISCLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ISCLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
