/**
 * generated by Xtext 2.20.0
 */
package uk.ac.kcl.inf.iSCL.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import uk.ac.kcl.inf.iSCL.ContractCancellationTerm;
import uk.ac.kcl.inf.iSCL.ISCLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Contract Cancellation Term</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.kcl.inf.iSCL.impl.ContractCancellationTermImpl#isCancelled <em>Cancelled</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ContractCancellationTermImpl extends ViolationTermImpl implements ContractCancellationTerm
{
  /**
   * The default value of the '{@link #isCancelled() <em>Cancelled</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isCancelled()
   * @generated
   * @ordered
   */
  protected static final boolean CANCELLED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isCancelled() <em>Cancelled</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isCancelled()
   * @generated
   * @ordered
   */
  protected boolean cancelled = CANCELLED_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ContractCancellationTermImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ISCLPackage.Literals.CONTRACT_CANCELLATION_TERM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isCancelled()
  {
    return cancelled;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCancelled(boolean newCancelled)
  {
    boolean oldCancelled = cancelled;
    cancelled = newCancelled;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ISCLPackage.CONTRACT_CANCELLATION_TERM__CANCELLED, oldCancelled, cancelled));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ISCLPackage.CONTRACT_CANCELLATION_TERM__CANCELLED:
        return isCancelled();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ISCLPackage.CONTRACT_CANCELLATION_TERM__CANCELLED:
        setCancelled((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ISCLPackage.CONTRACT_CANCELLATION_TERM__CANCELLED:
        setCancelled(CANCELLED_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ISCLPackage.CONTRACT_CANCELLATION_TERM__CANCELLED:
        return cancelled != CANCELLED_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (cancelled: ");
    result.append(cancelled);
    result.append(')');
    return result.toString();
  }

} //ContractCancellationTermImpl
