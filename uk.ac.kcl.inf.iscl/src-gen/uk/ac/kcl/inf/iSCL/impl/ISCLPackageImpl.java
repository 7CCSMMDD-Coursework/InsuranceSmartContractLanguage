/**
 * generated by Xtext 2.20.0
 */
package uk.ac.kcl.inf.iSCL.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import uk.ac.kcl.inf.iSCL.ClaimReductionTerm;
import uk.ac.kcl.inf.iSCL.ClaimTerm;
import uk.ac.kcl.inf.iSCL.Company;
import uk.ac.kcl.inf.iSCL.Contract;
import uk.ac.kcl.inf.iSCL.ContractCancellationTerm;
import uk.ac.kcl.inf.iSCL.ContractType;
import uk.ac.kcl.inf.iSCL.Coverage;
import uk.ac.kcl.inf.iSCL.Customer;
import uk.ac.kcl.inf.iSCL.ISCLFactory;
import uk.ac.kcl.inf.iSCL.ISCLPackage;
import uk.ac.kcl.inf.iSCL.InsurableObject;
import uk.ac.kcl.inf.iSCL.PaymentTerm;
import uk.ac.kcl.inf.iSCL.PremiumIncreaseTerm;
import uk.ac.kcl.inf.iSCL.ViolationTerm;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ISCLPackageImpl extends EPackageImpl implements ISCLPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass contractEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass paymentTermEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass claimTermEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass violationTermEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass contractCancellationTermEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass claimReductionTermEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass premiumIncreaseTermEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass customerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass companyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass insurableObjectEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum contractTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum coverageEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see uk.ac.kcl.inf.iSCL.ISCLPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private ISCLPackageImpl()
  {
    super(eNS_URI, ISCLFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link ISCLPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static ISCLPackage init()
  {
    if (isInited) return (ISCLPackage)EPackage.Registry.INSTANCE.getEPackage(ISCLPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredISCLPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    ISCLPackageImpl theISCLPackage = registeredISCLPackage instanceof ISCLPackageImpl ? (ISCLPackageImpl)registeredISCLPackage : new ISCLPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theISCLPackage.createPackageContents();

    // Initialize created meta-data
    theISCLPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theISCLPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(ISCLPackage.eNS_URI, theISCLPackage);
    return theISCLPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getContract()
  {
    return contractEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getContract_Type()
  {
    return (EAttribute)contractEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getContract_Name()
  {
    return (EAttribute)contractEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getContract_Company()
  {
    return (EReference)contractEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getContract_Customers()
  {
    return (EReference)contractEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getContract_InsurableObjects()
  {
    return (EReference)contractEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getContract_PaymentTerm()
  {
    return (EReference)contractEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getContract_ClaimTerm()
  {
    return (EReference)contractEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getContract_ViolationTerms()
  {
    return (EReference)contractEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPaymentTerm()
  {
    return paymentTermEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPaymentTerm_Premium()
  {
    return (EAttribute)paymentTermEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPaymentTerm_Period()
  {
    return (EAttribute)paymentTermEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPaymentTerm_Increase()
  {
    return (EAttribute)paymentTermEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getClaimTerm()
  {
    return claimTermEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getClaimTerm_Claim()
  {
    return (EAttribute)claimTermEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getClaimTerm_Claimer()
  {
    return (EReference)claimTermEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getViolationTerm()
  {
    return violationTermEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getContractCancellationTerm()
  {
    return contractCancellationTermEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getContractCancellationTerm_Cancelled()
  {
    return (EAttribute)contractCancellationTermEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getClaimReductionTerm()
  {
    return claimReductionTermEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getClaimReductionTerm_ClaimReduction()
  {
    return (EAttribute)claimReductionTermEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPremiumIncreaseTerm()
  {
    return premiumIncreaseTermEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPremiumIncreaseTerm_PremiumIncrease()
  {
    return (EAttribute)premiumIncreaseTermEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCustomer()
  {
    return customerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCustomer_Name()
  {
    return (EAttribute)customerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCustomer_Coverage()
  {
    return (EAttribute)customerEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCustomer_Participation()
  {
    return (EAttribute)customerEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCompany()
  {
    return companyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCompany_Name()
  {
    return (EAttribute)companyEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInsurableObject()
  {
    return insurableObjectEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getInsurableObject_Name()
  {
    return (EAttribute)insurableObjectEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInsurableObject_Owner()
  {
    return (EReference)insurableObjectEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getContractType()
  {
    return contractTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getCoverage()
  {
    return coverageEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ISCLFactory getISCLFactory()
  {
    return (ISCLFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    contractEClass = createEClass(CONTRACT);
    createEAttribute(contractEClass, CONTRACT__TYPE);
    createEAttribute(contractEClass, CONTRACT__NAME);
    createEReference(contractEClass, CONTRACT__COMPANY);
    createEReference(contractEClass, CONTRACT__CUSTOMERS);
    createEReference(contractEClass, CONTRACT__INSURABLE_OBJECTS);
    createEReference(contractEClass, CONTRACT__PAYMENT_TERM);
    createEReference(contractEClass, CONTRACT__CLAIM_TERM);
    createEReference(contractEClass, CONTRACT__VIOLATION_TERMS);

    paymentTermEClass = createEClass(PAYMENT_TERM);
    createEAttribute(paymentTermEClass, PAYMENT_TERM__PREMIUM);
    createEAttribute(paymentTermEClass, PAYMENT_TERM__PERIOD);
    createEAttribute(paymentTermEClass, PAYMENT_TERM__INCREASE);

    claimTermEClass = createEClass(CLAIM_TERM);
    createEAttribute(claimTermEClass, CLAIM_TERM__CLAIM);
    createEReference(claimTermEClass, CLAIM_TERM__CLAIMER);

    violationTermEClass = createEClass(VIOLATION_TERM);

    contractCancellationTermEClass = createEClass(CONTRACT_CANCELLATION_TERM);
    createEAttribute(contractCancellationTermEClass, CONTRACT_CANCELLATION_TERM__CANCELLED);

    claimReductionTermEClass = createEClass(CLAIM_REDUCTION_TERM);
    createEAttribute(claimReductionTermEClass, CLAIM_REDUCTION_TERM__CLAIM_REDUCTION);

    premiumIncreaseTermEClass = createEClass(PREMIUM_INCREASE_TERM);
    createEAttribute(premiumIncreaseTermEClass, PREMIUM_INCREASE_TERM__PREMIUM_INCREASE);

    customerEClass = createEClass(CUSTOMER);
    createEAttribute(customerEClass, CUSTOMER__NAME);
    createEAttribute(customerEClass, CUSTOMER__COVERAGE);
    createEAttribute(customerEClass, CUSTOMER__PARTICIPATION);

    companyEClass = createEClass(COMPANY);
    createEAttribute(companyEClass, COMPANY__NAME);

    insurableObjectEClass = createEClass(INSURABLE_OBJECT);
    createEAttribute(insurableObjectEClass, INSURABLE_OBJECT__NAME);
    createEReference(insurableObjectEClass, INSURABLE_OBJECT__OWNER);

    // Create enums
    contractTypeEEnum = createEEnum(CONTRACT_TYPE);
    coverageEEnum = createEEnum(COVERAGE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    contractCancellationTermEClass.getESuperTypes().add(this.getViolationTerm());
    claimReductionTermEClass.getESuperTypes().add(this.getViolationTerm());
    premiumIncreaseTermEClass.getESuperTypes().add(this.getViolationTerm());

    // Initialize classes and features; add operations and parameters
    initEClass(contractEClass, Contract.class, "Contract", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getContract_Type(), this.getContractType(), "type", null, 0, 1, Contract.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getContract_Name(), ecorePackage.getEString(), "name", null, 0, 1, Contract.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getContract_Company(), this.getCompany(), null, "company", null, 0, 1, Contract.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getContract_Customers(), this.getCustomer(), null, "customers", null, 0, -1, Contract.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getContract_InsurableObjects(), this.getInsurableObject(), null, "insurableObjects", null, 0, -1, Contract.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getContract_PaymentTerm(), this.getPaymentTerm(), null, "paymentTerm", null, 0, 1, Contract.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getContract_ClaimTerm(), this.getClaimTerm(), null, "claimTerm", null, 0, 1, Contract.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getContract_ViolationTerms(), this.getViolationTerm(), null, "violationTerms", null, 0, -1, Contract.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(paymentTermEClass, PaymentTerm.class, "PaymentTerm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPaymentTerm_Premium(), ecorePackage.getEFloat(), "premium", null, 0, 1, PaymentTerm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPaymentTerm_Period(), ecorePackage.getEInt(), "period", null, 0, 1, PaymentTerm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPaymentTerm_Increase(), ecorePackage.getEInt(), "increase", null, 0, 1, PaymentTerm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(claimTermEClass, ClaimTerm.class, "ClaimTerm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getClaimTerm_Claim(), ecorePackage.getEFloat(), "claim", null, 0, 1, ClaimTerm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getClaimTerm_Claimer(), this.getCustomer(), null, "claimer", null, 0, 1, ClaimTerm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(violationTermEClass, ViolationTerm.class, "ViolationTerm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(contractCancellationTermEClass, ContractCancellationTerm.class, "ContractCancellationTerm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getContractCancellationTerm_Cancelled(), ecorePackage.getEBoolean(), "cancelled", null, 0, 1, ContractCancellationTerm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(claimReductionTermEClass, ClaimReductionTerm.class, "ClaimReductionTerm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getClaimReductionTerm_ClaimReduction(), ecorePackage.getEInt(), "claimReduction", null, 0, 1, ClaimReductionTerm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(premiumIncreaseTermEClass, PremiumIncreaseTerm.class, "PremiumIncreaseTerm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPremiumIncreaseTerm_PremiumIncrease(), ecorePackage.getEInt(), "premiumIncrease", null, 0, 1, PremiumIncreaseTerm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(customerEClass, Customer.class, "Customer", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCustomer_Name(), ecorePackage.getEString(), "name", null, 0, 1, Customer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCustomer_Coverage(), this.getCoverage(), "coverage", null, 0, 1, Customer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCustomer_Participation(), ecorePackage.getEInt(), "participation", null, 0, 1, Customer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(companyEClass, Company.class, "Company", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCompany_Name(), ecorePackage.getEString(), "name", null, 0, 1, Company.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(insurableObjectEClass, InsurableObject.class, "InsurableObject", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getInsurableObject_Name(), ecorePackage.getEString(), "name", null, 0, 1, InsurableObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getInsurableObject_Owner(), this.getCustomer(), null, "owner", null, 0, 1, InsurableObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(contractTypeEEnum, ContractType.class, "ContractType");
    addEEnumLiteral(contractTypeEEnum, ContractType.PERSONAL);
    addEEnumLiteral(contractTypeEEnum, ContractType.POOL);
    addEEnumLiteral(contractTypeEEnum, ContractType.FAMILY);

    initEEnum(coverageEEnum, Coverage.class, "Coverage");
    addEEnumLiteral(coverageEEnum, Coverage.BENEFICIARY);
    addEEnumLiteral(coverageEEnum, Coverage.OWNER);

    // Create resource
    createResource(eNS_URI);
  }

} //ISCLPackageImpl
