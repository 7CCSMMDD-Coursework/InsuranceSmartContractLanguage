/**
 * generated by Xtext 2.20.0
 */
package uk.ac.kcl.inf.iSCL.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import uk.ac.kcl.inf.iSCL.Coverage;
import uk.ac.kcl.inf.iSCL.Customer;
import uk.ac.kcl.inf.iSCL.ISCLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Customer</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.kcl.inf.iSCL.impl.CustomerImpl#getName <em>Name</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.iSCL.impl.CustomerImpl#getCoverage <em>Coverage</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.iSCL.impl.CustomerImpl#getParticipation <em>Participation</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CustomerImpl extends MinimalEObjectImpl.Container implements Customer
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getCoverage() <em>Coverage</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCoverage()
   * @generated
   * @ordered
   */
  protected static final Coverage COVERAGE_EDEFAULT = Coverage.BENEFICIARY;

  /**
   * The cached value of the '{@link #getCoverage() <em>Coverage</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCoverage()
   * @generated
   * @ordered
   */
  protected Coverage coverage = COVERAGE_EDEFAULT;

  /**
   * The default value of the '{@link #getParticipation() <em>Participation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParticipation()
   * @generated
   * @ordered
   */
  protected static final int PARTICIPATION_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getParticipation() <em>Participation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParticipation()
   * @generated
   * @ordered
   */
  protected int participation = PARTICIPATION_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CustomerImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ISCLPackage.Literals.CUSTOMER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ISCLPackage.CUSTOMER__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Coverage getCoverage()
  {
    return coverage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCoverage(Coverage newCoverage)
  {
    Coverage oldCoverage = coverage;
    coverage = newCoverage == null ? COVERAGE_EDEFAULT : newCoverage;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ISCLPackage.CUSTOMER__COVERAGE, oldCoverage, coverage));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getParticipation()
  {
    return participation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParticipation(int newParticipation)
  {
    int oldParticipation = participation;
    participation = newParticipation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ISCLPackage.CUSTOMER__PARTICIPATION, oldParticipation, participation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ISCLPackage.CUSTOMER__NAME:
        return getName();
      case ISCLPackage.CUSTOMER__COVERAGE:
        return getCoverage();
      case ISCLPackage.CUSTOMER__PARTICIPATION:
        return getParticipation();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ISCLPackage.CUSTOMER__NAME:
        setName((String)newValue);
        return;
      case ISCLPackage.CUSTOMER__COVERAGE:
        setCoverage((Coverage)newValue);
        return;
      case ISCLPackage.CUSTOMER__PARTICIPATION:
        setParticipation((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ISCLPackage.CUSTOMER__NAME:
        setName(NAME_EDEFAULT);
        return;
      case ISCLPackage.CUSTOMER__COVERAGE:
        setCoverage(COVERAGE_EDEFAULT);
        return;
      case ISCLPackage.CUSTOMER__PARTICIPATION:
        setParticipation(PARTICIPATION_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ISCLPackage.CUSTOMER__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case ISCLPackage.CUSTOMER__COVERAGE:
        return coverage != COVERAGE_EDEFAULT;
      case ISCLPackage.CUSTOMER__PARTICIPATION:
        return participation != PARTICIPATION_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", coverage: ");
    result.append(coverage);
    result.append(", participation: ");
    result.append(participation);
    result.append(')');
    return result.toString();
  }

} //CustomerImpl
